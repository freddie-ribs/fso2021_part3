{"version":3,"sources":["components/PersonForm.js","services/services.js","components/Persons.js","components/Filter.js","components/Message.js","App.js","reportWebVitals.js","index.js"],"names":["PersonForm","newName","setNewName","newNumber","setNewNumber","handleSubmit","onSubmit","value","onChange","e","target","type","baseUrl","axios","get","then","res","data","newPerson","post","id","delete","contactToUpdate","put","Persons","filteredNames","setPersons","persons","map","person","name","number","onClick","window","confirm","services","filter","contact","handleDelete","Filter","keyword","setKeyword","toLowerCase","onInputChange","Message","props","className","message","App","useState","setMessage","error","setError","useEffect","includes","preventDefault","newContact","contactExists","find","updatedContact","catch","err","setTimeout","address","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf1ce8cf.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst PersonForm = ({\r\n\tnewName,\r\n\tsetNewName,\r\n\tnewNumber,\r\n\tsetNewNumber,\r\n\thandleSubmit,\r\n}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tname:{\" \"}\r\n\t\t\t\t\t<input value={newName} onChange={e => setNewName(e.target.value)} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tnumber:{\" \"}\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tvalue={newNumber}\r\n\t\t\t\t\t\tonChange={e => setNewNumber(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type=\"submit\">add</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PersonForm\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n\tconst req = axios.get(baseUrl)\r\n\treturn req.then(res => res.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n\tconst req = axios.post(baseUrl, newPerson)\r\n\treturn req.then(res => res.data)\r\n}\r\n\r\nconst remove = id => {\r\n\tconst req = axios.delete(`${baseUrl}/${id}`)\r\n\treturn req.then(res => res.data)\r\n}\r\n\r\nconst update = (id, contactToUpdate) => {\r\n\tconst req = axios.put(`${baseUrl}/${id}`, contactToUpdate)\r\n\treturn req.then(res => res.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }\r\n","import React from \"react\"\r\nimport services from \"../services/services\"\r\n\r\nconst Persons = ({ filteredNames, setPersons, persons }) => {\r\n\tconst handleDelete = person => {\r\n\t\tif (\r\n\t\t\t!window.confirm(`Are you sure you want to delete ${person.name} from your phonebook?\r\n\t\t`)\r\n\t\t) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tservices.remove(person.id).then(() => {\r\n\t\t\tsetPersons(persons.filter(contact => contact.id !== person.id))\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{filteredNames.map(person => (\r\n\t\t\t\t<div key={person.id}>\r\n\t\t\t\t\t{person.name} {person.number}{\" \"}\r\n\t\t\t\t\t<button onClick={() => handleDelete(person)}>delete</button>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Persons\r\n","import React from \"react\"\r\n\r\nconst Filter = ({ keyword, setKeyword }) => {\r\n\tconst onInputChange = e => {\r\n\t\tsetKeyword(e.target.value.toLowerCase())\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tfilter show with:{\" \"}\r\n\t\t\t<input value={keyword} onChange={e => onInputChange(e)} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Filter\r\n","import React from \"react\"\r\n\r\nconst Message = props => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2 className={props.className}> {props.message}</h2>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Message\r\n","import React, { useState, useEffect } from \"react\"\nimport PersonForm from \"./components/PersonForm\"\nimport Persons from \"./components/Persons\"\nimport Filter from \"./components/Filter\"\nimport services from \"./services/services\"\nimport Message from \"./components/Message\"\nimport \"./index.css\"\n\nconst App = () => {\n\tconst [persons, setPersons] = useState([])\n\tconst [newName, setNewName] = useState(\"\")\n\tconst [newNumber, setNewNumber] = useState(\"\")\n\tconst [keyword, setKeyword] = useState(\"\")\n\tconst [message, setMessage] = useState(\"\")\n\tconst [error, setError] = useState(false)\n\n\tuseEffect(() => {\n\t\tservices.getAll().then(res => setPersons(res))\n\t}, [])\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault()\n\t\tconst newContact = {\n\t\t\tname: newName,\n\t\t\tnumber: newNumber,\n\t\t}\n\n\t\tconst contactExists = persons.find(({ name }) => name === newName)\n\n\t\tif (contactExists) {\n\t\t\tconst updateContact = window.confirm(\n\t\t\t\t`${contactExists.name} is already in your phonebook. Would you like to update it's number ?`\n\t\t\t)\n\t\t\tif (updateContact) {\n\t\t\t\tservices\n\t\t\t\t\t.update(contactExists.id, { ...contactExists, number: newNumber })\n\t\t\t\t\t.then(updatedContact => {\n\t\t\t\t\t\tsetPersons(\n\t\t\t\t\t\t\tpersons.map(person =>\n\t\t\t\t\t\t\t\tperson.name === newName ? updatedContact : person\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tsetMessage(`${newName} has already been deleted from database.`)\n\t\t\t\t\t\tsetError(!error)\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tsetMessage(\"\")\n\t\t\t\t\t\t\tsetError(!error)\n\t\t\t\t\t\t}, 2500)\n\t\t\t\t\t})\n\t\t\t}\n\t\t} else {\n\t\t\tservices.create(newContact).then(address => {\n\t\t\t\tsetPersons(persons.concat(address))\n\t\t\t\tsetNewName(\"\")\n\t\t\t\tsetNewNumber(\"\")\n\t\t\t\tsetMessage(`Added ${newName}`)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetMessage(\"\")\n\t\t\t\t}, 2500)\n\t\t\t})\n\n\t\t\treturn\n\t\t}\n\t}\n\n\tconst filteredNames = persons.filter(person =>\n\t\tperson.name.toLowerCase().includes(keyword)\n\t)\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Phonebook</h2>\n\t\t\t{message && !error ? (\n\t\t\t\t<Message message={message} className=\"success\" />\n\t\t\t) : null}\n\t\t\t{message && error ? (\n\t\t\t\t<Message message={message} className=\"error\" />\n\t\t\t) : null}\n\t\t\t<Filter keyword={keyword} setKeyword={setKeyword} />\n\t\t\t<h2>add a new</h2>\n\t\t\t<PersonForm\n\t\t\t\tnewName={newName}\n\t\t\t\tsetNewName={setNewName}\n\t\t\t\tnewNumber={newNumber}\n\t\t\t\tsetNewNumber={setNewNumber}\n\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t/>\n\t\t\t<h2>Numbers</h2>\n\t\t\t<Persons\n\t\t\t\tfilteredNames={filteredNames}\n\t\t\t\tpersons={persons}\n\t\t\t\tsetPersons={setPersons}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}